We use a .env file (environment file) to store configuration values and sensitive data (like passwords, API keys, database URLs) outside of the main source code.

Here’s why it’s used:

🔑 Reasons to use .env file:

Security 🛡️

Keeps secrets (like API keys, tokens, DB passwords) out of your code.

Prevents accidental leaks when pushing code to GitHub.

Configuration Management ⚙️

Lets you manage app settings (like ports, environment mode, service URLs) without hardcoding them.

Environment Specific Values 🌍

You can have different .env files for development, testing, and production.

Example:

Development DB: localhost

Production DB: aws-rds-server

Easier Collaboration 👨‍💻👩‍💻

Developers can keep their own .env file locally without affecting others.

12-Factor App Principle ✅

Modern apps follow this principle: “Store config in environment, not in code.”

📝 Example .env file
PORT=5000
DB_HOST=localhost
DB_USER=root
DB_PASS=supersecret
API_KEY=abc123xyz

🔧 How it’s used in Node.js (example with dotenv)
require('dotenv').config();

console.log(process.env.PORT);      // 5000
console.log(process.env.DB_USER);   // root


👉 So in short: .env keeps secrets safe, makes configuration flexible, and separates code from environment-specific data.

require('dotenv').config() in Node.js

require('dotenv')

This loads the dotenv library (a Node.js package).

dotenv is used to read your .env file.

.config()

This method tells dotenv to parse your .env file and put the variables inside process.env.

Result

After calling it, all the key–value pairs in your .env file become available globally in your Node.js app through process.env.

📝 Example
.env
PORT=5000
DB_USER=admin
DB_PASS=secret123

app.js
require('dotenv').config();  // loads .env file

console.log(process.env.PORT);     // 5000
console.log(process.env.DB_USER);  // admin
console.log(process.env.DB_PASS);  // secret123

⚡ Without require('dotenv').config()

Node.js wouldn’t automatically know about your .env file.

process.env.PORT would be undefined.

👉 So in short:
require('dotenv').config() = "Load my .env file and make the variables available in process.env."